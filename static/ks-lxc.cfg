#version=PROD

text

auth --enableshadow --passalgo=sha512
ignoredisk --only-use=vda
keyboard --vckeymap=us --xlayouts='us'
lang en_US.UTF-8

network --hostname=lxc-01.0x378.net

# Default password is toor
rootpw toor

timezone America/New_York --isUtc
bootloader --location=mbr --boot-drive=vda

clearpart --none --initlabel
part /boot --fstype="ext4" --ondisk=vda --size=500
part / --fstype="ext4" --ondisk=vda --grow

repo --name=fedora --mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-$releasever&arch=$basearch
repo --name=updates --mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=updates-released-f$releasever&arch=$basearch

reboot

%packages
@core
bridge-utils
lxc
libvirt
virt-install
iptables-services
-firewalld
-NetworkManager
-NetworkManager-glib
-libgudev1

%end
%post

# Enable logins through the serial console:
systemctl start getty@ttyS0.service
systemctl enable getty@ttyS0.service
echo 'ttyS0' >> /etc/securetty

# Enable grub over the serial connection
cat << EOF > /etc/sysconfig/grub
GRUB_TIMEOUT="3"
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT="saved"

GRUB_GFXMODE="text"
GRUB_TERMINAL="serial console"
GRUB_SERIAL_COMMAND="serial --unit=0 --speed=115200 --word=8 --parity=no --stop=1"
GRUB_CMDLINE_LINUX="rd.md=0 rd.lvm=0 rd.dm=0 $([ -x /usr/sbin/rhcrashkernel-param ] && /usr/sbin/rhcrashkernel-param || :) rd.luks=0 vconsole.keymap=us text console=tty0 console=ttyS0,115200n8"

GRUB_DISABLE_RECOVERY="true"
EOF
grub2-mkconfig -o /boot/grub2/grub.cfg

# Configure the firewalls:
cat << EOF > /etc/sysconfig/iptables
*filter
:INPUT   DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT  DROP [0:0]

-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT

# Allow this machine to be accessed with SSH
-A INPUT -m tcp -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT

-A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A OUTPUT -p icmp -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

# Allow outbound DNS requests for host lookups
-A OUTPUT -m udp -p udp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
-A OUTPUT -m tcp -p tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT

# Allow outbound HTTP(S) connections for updating
-A OUTPUT -m tcp -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
-A OUTPUT -m tcp -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT

# Log any attempts that try to slip through
-A OUTPUT -m limit --limit 2/s --limit-burst 5 -j LOG --log-prefix "Outgoing attempt: "
-A OUTPUT -j REJECT

COMMIT
EOF

cat << EOF > /etc/sysconfig/ip6tables
*filter
:INPUT   DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT  DROP [0:0]

-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p ipv6-icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT

# Allow this machine to be accessed with SSH
-A INPUT -m tcp -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT

-A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A OUTPUT -p ipv6-icmp -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

# Allow outbound DNS requests for host lookups
-A OUTPUT -m udp -p udp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
-A OUTPUT -m tcp -p tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT

# Allow outbound HTTP(S) connections for updating
-A OUTPUT -m tcp -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
-A OUTPUT -m tcp -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT

# Log any attempts that try to slip through
-A OUTPUT -m limit --limit 2/s --limit-burst 5 -j LOG --log-prefix "Outgoing attempt: "
-A OUTPUT -j REJECT

COMMIT
EOF

# Network configuration!
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE="eth0"
NM_CONTROLLED="no"
ONBOOT="yes"
BRIDGE="br0"

BOOTPROTO="none"
IPV4_FAILURE_FATAL="no"
IPV6_FAILURE_FATAL="no"
IPV6INIT="no"
EOF

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-br0
DEVICE="br0"
TYPE="Bridge"
NM_CONTROLLED="no"
ONBOOT="yes"

BOOTPROTO="static"

DEFROUTE="yes"

IPV4_FAILURE_FATAL="yes"
PEERDNS="yes"
PEERROUTES="yes"
IPADDR="192.168.122.30"
NETMASK="255.255.255.0"
GATEWAY="192.168.122.1"

DNS1="192.168.122.1"
DOMAIN="example.tld"

IPV6INIT="yes"
IPV6_AUTOCONF="yes"
IPV6_DEFROUTE="yes"
IPV6_PEERDNS="yes"
IPV6_PEERROUTES="yes"
IPV6_FAILURE_FATAL="no"

DELAY="0"
EOF

# Service configuration
systemctl enable libvirtd.service
systemctl enable network.service
systemctl enable iptables.service
systemctl enable ip6tables.service

echo 'uri_default = "lxc://"' >> /etc/libvirt/libvirt.conf

yum erase firewalld sendmail -y
systemctl disable avahi-daemon.{service,socket}
systemctl mask rpcbind.{service,socket}

virsh net-destroy default
virsh net-undefine default

cat << EOF > /root/bridge-net.xml
<network ipv6="yes">
  <name>br0</name>
  <bridge name="br0"/>
  <forward mode="bridge"/>
</network>
EOF

virsh net-define /root/bridge-net.xml
virsh net-autostart /root/bridge-net.xml

cat << EOF > /root/keepalive-net.xml
<network ipv6="yes">
  <name>keepalive</name>
  <bridge name='br1' stp='off' delay='0' />
  <forward mode="bridge"/>
</network>
EOF

virsh net-define /root/keepalive-net.xml
virsh net-autostart /root/keepalive-net.xml

cat << EOF > /root/isolated-net.xml
<network ipv6="yes">
  <name>isolated</name>
  <bridge name='br2' stp='off' delay='0' />
  <forward mode="bridge"/>
</network>
EOF

virsh net-define /root/isolated-net.xml
virsh net-autostart /root/isolated-net.xml

%end
