--- 
title: 'Ruby Code Quality Metrics'
created_at: 2015-04-22 16:47:10 -0400
updated_at: 2015-04-22 16:47:10 -0400
kind: article
published: false
type: post
layout: blog_post
tags:
- code analysis
- quality
- ruby
---

I like getting unopionated feedback on the quality of the code I write.
Sometimes I can get this from other developers but they tend to get annoyed
being asked after every commit whether they consider it an approvement.

There are a few utilities for Ruby codebases such as [flay][1], [flog][2], and
[rubocop][3] as well as hosted services such as [Code Climate][4] that can help
you identify chunks of code that can use some work.

While not directly connected to the quality of the code, I also make use of
[yard][5] and [simplecov][6] to assess documentation and test coverage of the
codebases I work on.

Each tool requires a bit of understanding for their output

A developer named [Jake Scruggs][8] wrote a blog post quite a while ago (2008)
with a rough table for assessing scores on individual methods reported from the
flog utility. From what I can tell the scores

 uses the following (more or less) metric for
flog method complexity analysis:

Method Score    Description
0   - 10        Awesome
10  - 20        Good enough
20  - 40        Might need refactoring
40  - 60        Possible to justify
60  - 100       Danger
100 - 200       Raise the alarm
200+            Seriously what are you doing!?

For method average I prefer to have a much more aggressive scale. An
individual method may be able to get away with a high score but the vast
majority should be of sufficient quality to reduce the average back to sane
levels.

The following is going to need some work. I've seen some awesome code bases
with a score of 6.4 on average, some bad larger ones with 7.8. Even some
mediocre ones around a score of 10.6.

Method Score    Description
0 - 5           Awesome
5 - 10          Good enough
10 - 15         Other people might have a hard time with this code base
15 - 25         The code base needs some serious work
25+             Might want to consider a re-write from the ground up...

[1]: https://github.com/seattlerb/flay
[2]: https://github.com/seattlerb/flog
[3]: https://github.com/bbatsov/rubocop
[4]: https://codeclimate.com/
[5]: http://yardoc.org/
[6]: https://github.com/colszowka/simplecov
[7]: http://blog.codeclimate.com/blog/2013/08/07/deciphering-ruby-code-metrics/
[8]: http://jakescruggs.blogspot.com/2008/08/whats-good-flog-score.html
