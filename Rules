#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

excluded_extensions = %w{ txt xml }

compile '/styles/root/' do
  filter :sass, syntax: :scss, style: :compact if item[:extension] == 'scss'
end

compile '/styles/*' do
  nil
end

compile '/javascripts/root/' do
  filter :coffeescript if item[:extension] == 'coffee'
  #filter :uglify_js, compress: true, mangle: true
  filter :uglify_js, output: { beautify: true, bracketize: true, semicolons: true }
end

compile '/javascripts/modernizr/' do
  filter :uglify_js, compress: true, mangle: true
end

compile '/javascripts/*' do
  nil
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    item[:extension].split('.').reverse_each do |e|
      filter :erb if e == 'erb'
      filter :redcarpet if e == 'md'
    end

    layout 'default' unless excluded_extensions.include?(item[:extension])
  end
end

route '/styles/root/' do
  '/c.css'
end

route '/styles/*' do
  nil
end

route '/javascripts/root/' do
  '/j.js'
end

route '/javascripts/modernizr/' do
  '/m.js'
end

route '/javascripts/*' do
  nil
end

route '*' do
  if item.binary? || excluded_extensions.include?(item[:extension])
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb

