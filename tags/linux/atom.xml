<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux - Sam Stelfox&#39;s Thoughts &amp; Notes</title>
    <link>https://stelfox.net/tags/linux/</link>
    <description>Recent content in Linux - Sam Stelfox&#39;s Thoughts &amp; Notes</description>
    <language>en-US</language>
    <managingEditor>Sam Stelfox</managingEditor>
    <webMaster>Sam Stelfox</webMaster><atom:link href="https://stelfox.net/tags/linux/atom.xml" rel="self" type="application/rss+xml" /><item>
      <title>Downgrading Glibc in Gentoo</title>
      <link>https://stelfox.net/blog/2017/11/downgrading-glibc-in-gentoo/</link>
      <pubDate>Wed, 15 Nov 2017 12:27:45 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/downgrading-glibc-in-gentoo/</guid>
      <description>While refining some automated setup scripts at some point I upgraded to a testing/unstable version of glibc. When I attempted to get the box back on to the stable version I hit a solid protection mechanism built into the portage scripts that prevents downgrading glibc. Attempts will give you the following error message:
 * Sanity check to keep you from breaking your system: * Downgrading glibc is not supported and a sure way to destruction * ERROR: sys-libs/glibc-2.</description>
    </item><item>
      <title>File in Wrong Format</title>
      <link>https://stelfox.net/blog/2017/11/file-in-wrong-format/</link>
      <pubDate>Mon, 13 Nov 2017 13:44:00 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/file-in-wrong-format/</guid>
      <description>I have been recently attempting to cross compile a custom Gentoo profile targetting a Xilinx board as I found their distribution to be unmanageable (PetaLinux as hacked together sub-distro of Yocto). I had several issues with the default profile (embedded) conflicting with other critical packages. I&amp;rsquo;ll do a detailed post later on for building that entire root filesystem.
I came across one issue which didn&amp;rsquo;t seem to have a well-documented solution.</description>
    </item><item>
      <title>Gentoo Fstab Failure</title>
      <link>https://stelfox.net/blog/2017/11/gentoo-fstab-failure/</link>
      <pubDate>Wed, 01 Nov 2017 11:12:34 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/gentoo-fstab-failure/</guid>
      <description>I use Gentoo with OpenRC quite a bit both for my personal servers and as a compilation test bed for new software since I can control the dependency versions very tightly. I have a set of scripts I&amp;rsquo;ve been using for quite some time that handle setting up a hardened, fairly minimal install.
I recently encountered a weird issue with them that resulted in an esoteric error that prevented my host from fully booting and leaving the root filesystem read-only.</description>
    </item><item>
      <title>Cron Daemon</title>
      <link>https://stelfox.net/notes/cron-daemon/</link>
      <pubDate>Thu, 26 Oct 2017 17:35:42 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/cron-daemon/</guid>
      <description>Cron is a pretty standard utility and there isn&amp;rsquo;t much to it. I generally use cronie as my cron daemon with the associated anacron. Cron runs tasks periodically, and anacron helps ensure that a missed task will get run if it was off or powercycled when it would have otherwise run.
File Format The config format differs slightly between crontabs, regular cron files, and anacron entries. At the beginning of all the files environment variables can be set using key=value pairs to control the behavior of cron and anacron followed by entries for that file one to a line.</description>
    </item><item>
      <title>Syslog-NG</title>
      <link>https://stelfox.net/notes/syslog-ng/</link>
      <pubDate>Wed, 25 Oct 2017 01:56:02 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/syslog-ng/</guid>
      <description>Syslog-NG is a fast, reliable, and secure syslog daemon that can do advanced processing and log centralization while maintaining a sane configuration file syntax. I&amp;rsquo;ve recently come to vastly prefer it over my previous long term favorite Rsyslog.
It&amp;rsquo;s important to note that when modifying the logs statements, they will be processed in order. This means log statements that finalize a message will never make it past that statement. This finalization behavior can be a great tool for optimizing the processing path of logs but can result in unexpected behavior if you don&amp;rsquo;t pay attention when re-ordering the statements.</description>
    </item><item>
      <title>Investigating LVM From Dracut</title>
      <link>https://stelfox.net/blog/2017/10/investigating-lvm-from-dracut/</link>
      <pubDate>Tue, 24 Oct 2017 11:45:07 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/investigating-lvm-from-dracut/</guid>
      <description>In my my last post, I covered finding logical volumes that were missing from LVM from within a live CD (which is effectively a whole standard environment). Working with dracut is quite a bit more limited.
Turns out that the commands I&amp;rsquo;m normally used to for operating and inspecting LVM volumes can all be accessed as a second parameter to the lvm tool like so:
$ lvm vgscan $ lvm pvscan $ lvm lvscan For my particular issue, it led me to notice that block device of my root filesystem was missing due to a missing kernel driver&amp;hellip;</description>
    </item><item>
      <title>Visible Yet Missing Logical Volumes</title>
      <link>https://stelfox.net/blog/2017/10/visible-yet-missing-logical-volumes/</link>
      <pubDate>Tue, 24 Oct 2017 10:58:12 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/visible-yet-missing-logical-volumes/</guid>
      <description>While working on an automated install script for an embedded board, I hit an issue with the logical volumes never showing up in /dev/mapper, and in turn unable to be mounted. This left me in the dracut emergency shell (after about three minutes), with little to go on beyond the following error:
[187.508531] dracut Warning: Could not boot. [187.510560] dracut Warning: /dev/disk/by-uuid/5681-902D does not exist [187.512534] dracut Warning: /dev/mapper/system-root does not exit [187.</description>
    </item><item>
      <title>Mutt</title>
      <link>https://stelfox.net/notes/mutt/</link>
      <pubDate>Fri, 20 Oct 2017 12:51:00 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/mutt/</guid>
      <description>I keep a copy of my mutt config both here on the site as well as in my public dotfiles. Eventually I&amp;rsquo;ll likely document my reasoning, preferences and the tradeoffs made in that config (and change my mind on most in the process).
Vim Since I use vim as my editor I also added the following line to my vim configuration file to autowrap my lines at 72 characters, but only for mutt composed messsages.</description>
    </item><item>
      <title>IPTables</title>
      <link>https://stelfox.net/notes/iptables/</link>
      <pubDate>Fri, 20 Oct 2017 12:14:02 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/iptables/</guid>
      <description>iptables (and ip6tables) is a simple application for interacting directly with the Linux kernel&amp;rsquo;s netfilter firewall. nftables is attempting to replace it. nftables has better performance but is incredibly complex and difficult to use. Until the tooling and usability around nftables is addressed iptables will likely remain the reigning champion.
It is important that your systems have effective ingress and egress rules. Depending on your host OS, you&amp;rsquo;ll find your rule set stored in different locations but the following list are where I&amp;rsquo;ve seen them before:</description>
    </item><item>
      <title>Linux Audit Rule Paths</title>
      <link>https://stelfox.net/blog/2017/10/linux-audit-rule-paths/</link>
      <pubDate>Mon, 16 Oct 2017 23:20:20 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/linux-audit-rule-paths/</guid>
      <description>I encountered a little bit of confusion while rewriting my auditd rules which some Googling did not help me solve.
When monitoring a file or directory there are two forms the rules can take. They are effectively equivalent in their functionality. The simpler form is the following format:
-w /etc/shadow -p wa -w /boot -p wa -w /etc/dont_readme -p r  These three rules are all behaving slightly differently. The first will audit any writes or attribute changes to the shadow file.</description>
    </item></channel>
</rss>
