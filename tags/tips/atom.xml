<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips - Sam Stelfox&#39;s Thoughts &amp; Notes</title>
    <link>https://stelfox.net/tags/tips/</link>
    <description>Recent content in Tips - Sam Stelfox&#39;s Thoughts &amp; Notes</description>
    <language>en-US</language>
    <managingEditor>Sam Stelfox</managingEditor>
    <webMaster>Sam Stelfox</webMaster><atom:link href="https://stelfox.net/tags/tips/atom.xml" rel="self" type="application/rss+xml" /><item>
      <title>Downgrading Glibc in Gentoo</title>
      <link>https://stelfox.net/blog/2017/11/downgrading-glibc-in-gentoo/</link>
      <pubDate>Wed, 15 Nov 2017 12:27:45 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/downgrading-glibc-in-gentoo/</guid>
      <description>While refining some automated setup scripts at some point I upgraded to a testing/unstable version of glibc. When I attempted to get the box back on to the stable version I hit a solid protection mechanism built into the portage scripts that prevents downgrading glibc. Attempts will give you the following error message:
 * Sanity check to keep you from breaking your system: * Downgrading glibc is not supported and a sure way to destruction * ERROR: sys-libs/glibc-2.</description>
    </item><item>
      <title>File in Wrong Format</title>
      <link>https://stelfox.net/blog/2017/11/file-in-wrong-format/</link>
      <pubDate>Mon, 13 Nov 2017 13:44:00 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/file-in-wrong-format/</guid>
      <description>I have been recently attempting to cross compile a custom Gentoo profile targetting a Xilinx board as I found their distribution to be unmanageable (PetaLinux as hacked together sub-distro of Yocto). I had several issues with the default profile (embedded) conflicting with other critical packages. I&amp;rsquo;ll do a detailed post later on for building that entire root filesystem.
I came across one issue which didn&amp;rsquo;t seem to have a well-documented solution.</description>
    </item><item>
      <title>Gentoo Fstab Failure</title>
      <link>https://stelfox.net/blog/2017/11/gentoo-fstab-failure/</link>
      <pubDate>Wed, 01 Nov 2017 11:12:34 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/gentoo-fstab-failure/</guid>
      <description>I use Gentoo with OpenRC quite a bit both for my personal servers and as a compilation test bed for new software since I can control the dependency versions very tightly. I have a set of scripts I&amp;rsquo;ve been using for quite some time that handle setting up a hardened, fairly minimal install.
I recently encountered a weird issue with them that resulted in an esoteric error that prevented my host from fully booting and leaving the root filesystem read-only.</description>
    </item><item>
      <title>Investigating LVM From Dracut</title>
      <link>https://stelfox.net/blog/2017/10/investigating-lvm-from-dracut/</link>
      <pubDate>Tue, 24 Oct 2017 11:45:07 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/investigating-lvm-from-dracut/</guid>
      <description>In my my last post, I covered finding logical volumes that were missing from LVM from within a live CD (which is effectively a whole standard environment). Working with dracut is quite a bit more limited.
Turns out that the commands I&amp;rsquo;m normally used to for operating and inspecting LVM volumes can all be accessed as a second parameter to the lvm tool like so:
$ lvm vgscan $ lvm pvscan $ lvm lvscan For my particular issue, it led me to notice that block device of my root filesystem was missing due to a missing kernel driver&amp;hellip;</description>
    </item><item>
      <title>Visible Yet Missing Logical Volumes</title>
      <link>https://stelfox.net/blog/2017/10/visible-yet-missing-logical-volumes/</link>
      <pubDate>Tue, 24 Oct 2017 10:58:12 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/visible-yet-missing-logical-volumes/</guid>
      <description>While working on an automated install script for an embedded board, I hit an issue with the logical volumes never showing up in /dev/mapper, and in turn unable to be mounted. This left me in the dracut emergency shell (after about three minutes), with little to go on beyond the following error:
[187.508531] dracut Warning: Could not boot. [187.510560] dracut Warning: /dev/disk/by-uuid/5681-902D does not exist [187.512534] dracut Warning: /dev/mapper/system-root does not exit [187.</description>
    </item><item>
      <title>Vultr Deny All Firewall</title>
      <link>https://stelfox.net/blog/2017/10/vultr-deny-all-firewall/</link>
      <pubDate>Fri, 20 Oct 2017 17:18:36 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/vultr-deny-all-firewall/</guid>
      <description>While setting up new instances on Vultr for testing, I wanted to initially ensure that no traffic beyond my own could touch the instances. After adding a matching rule for SSH to my IPv4 address, a default rule shows up that drops any unspecified traffic. Switching to the IPv6 I wanted to add a drop all rule (as I wouldn&amp;rsquo;t be using IPv6 until the system was up).
The interface only allows accept rules to be created and additionally you&amp;rsquo;ll be greeted with this message while trying to figure out what to do:</description>
    </item><item>
      <title>Linux Audit Rule Paths</title>
      <link>https://stelfox.net/blog/2017/10/linux-audit-rule-paths/</link>
      <pubDate>Mon, 16 Oct 2017 23:20:20 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/linux-audit-rule-paths/</guid>
      <description>I encountered a little bit of confusion while rewriting my auditd rules which some Googling did not help me solve.
When monitoring a file or directory there are two forms the rules can take. They are effectively equivalent in their functionality. The simpler form is the following format:
-w /etc/shadow -p wa -w /boot -p wa -w /etc/dont_readme -p r  These three rules are all behaving slightly differently. The first will audit any writes or attribute changes to the shadow file.</description>
    </item><item>
      <title>Disk Errors</title>
      <link>https://stelfox.net/notes/disk-errors/</link>
      <pubDate>Mon, 09 Oct 2017 23:05:43 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/disk-errors/</guid>
      <description>This is a weird file&amp;hellip; But while installing gentoo on a disk I started getting a weird error when printing the current partitions on the drive:
Warning: The driver descriptor says the physical block size is 2048 bytes, but Linux says it is 512 bytes.  The only thing I&amp;rsquo;ve been able to find anywhere about this is &amp;ldquo;a low-level device tool (like dd) wrote blocks at the wrong size directly onto the device&amp;rdquo;.</description>
    </item><item>
      <title>Creating an Empty Git Branch</title>
      <link>https://stelfox.net/blog/2015/04/creating-an-empty-git-branch/</link>
      <pubDate>Mon, 13 Apr 2015 20:47:40 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2015/04/creating-an-empty-git-branch/</guid>
      <description>Every now and then I find myself wanting to create a new empty branch in an existing repository. It&amp;rsquo;s useful for things such as GitHub Pages so you&amp;rsquo;re able to keep your content source in the master branch while only keeping the output in the gh-pages branch. I&amp;rsquo;ve also used it for testing a complete rewrite of a code base without the overhead of creating a new repo and copying access permissions.</description>
    </item><item>
      <title>Unbuffered Pipe Filters</title>
      <link>https://stelfox.net/blog/2015/02/unbuffered-pipe-filters/</link>
      <pubDate>Mon, 23 Feb 2015 12:49:13 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2015/02/unbuffered-pipe-filters/</guid>
      <description>I need to filter a live log stream for only relevant events and quickly hit an issue that I wasn&amp;rsquo;t expecting. The grep in my pipe chain was waiting until it received all the output from the prior command before it began to attempt to filter it.
Reading through the grep man page I came across the --line-buffered flag which provides exactly what I needed. I wasn&amp;rsquo;t using the tail command but it serves really well in this situation to demonstrate the use:</description>
    </item></channel>
</rss>
